#include "Cat.hpp"

////////////////////////////////////////////////////////////////////
///////////////////// Overload Operator ////////////////////////////
////////////////////////////////////////////////////////////////////

Cat::Cat(void) : Animal()
{
	std::cout << "\x1b[33m" <<  "default Cat constructor called!" << "\x1b[0m" << std::endl;
	this->_type = "Cat";
}
Cat::Cat(const Cat& original) : Animal(original)
{
	std::cout << "\x1b[33m" << "Copy Cat constructor called !" << "\x1b[0m" << std::endl;
	*this = original;
}
Cat::~Cat(void)
{
	std::cout << "\x1b[33m" <<  "Cat destructor called!" << "\x1b[0m" << std::endl;
}

////////////////////////////////////////////////////////////////////
///////////////////// Overload Operator ////////////////////////////
////////////////////////////////////////////////////////////////////

Cat& Cat::operator=(const Cat& original)
{
	if (this == &original)
		return (*this);
	this->_type = original._type;
	return (*this);
}
////////////////////////////////////////////////////////////////////
///////////////////// Overload Operator ////////////////////////////
////////////////////////////////////////////////////////////////////
void	Cat::makeSound( void ) const
{
	std::cout <<  "*MEOW*" << std::endl;
}